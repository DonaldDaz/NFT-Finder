{"ast":null,"code":"var _jsxFileName = \"/Users/davidazzato/Desktop/Tesi/Capitolo 3/WebApp/Prova Flask+React/FlaskreactProject/client/src/pages/SingleNft.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams, Link } from \"react-router-dom\";\nconst url = \"http://127.0.0.1:5000/nftDetails?id=\";\n\nconst SingleNft = () => {\n  const {\n    Id\n  } = useParams();\n  const [singleNft, setSingleNft] = useState(null);\n\n  const getSingleNft = async () => {\n    const response = await fetch(url + Id);\n    const data = await response.json();\n    console.log(data);\n    setSingleNft(data);\n  };\n\n  useEffect(() => {\n    getSingleNft();\n  }, []);\n\n  if (!singleNft) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const {\n    similarityScore,\n    base64Img,\n    category,\n    coco_url,\n    collection,\n    date_captured,\n    file_name,\n    file_path,\n    flickr_url,\n    generated_caption,\n    height,\n    id,\n    license,\n    original_caption,\n    similarity,\n    width\n  } = singleNft;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, singleNft && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"back home\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section nftDetails-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nftDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/jpeg;base64,${base64Img}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nft-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Description :\"), generated_caption), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Category :\"), category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Collection :\"), collection), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Original Caption :\"), original_caption), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Size :\"), height, \" x \", width, \" Pixels\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"License Type:\"), license))))));\n};\n\nexport default SingleNft;","map":{"version":3,"sources":["/Users/davidazzato/Desktop/Tesi/Capitolo 3/WebApp/Prova Flask+React/FlaskreactProject/client/src/pages/SingleNft.js"],"names":["React","useState","useEffect","Loading","useParams","Link","url","SingleNft","Id","singleNft","setSingleNft","getSingleNft","response","fetch","data","json","console","log","similarityScore","base64Img","category","coco_url","collection","date_captured","file_name","file_path","flickr_url","generated_caption","height","id","license","original_caption","similarity","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Loading from \"../components/Loading\";\nimport { useParams, Link } from \"react-router-dom\";\nconst url = \"http://127.0.0.1:5000/nftDetails?id=\";\n\nconst SingleNft = () => {\n  const { Id } = useParams();\n\n  const [singleNft, setSingleNft] = useState(null);\n  const getSingleNft = async () => {\n    const response = await fetch(url + Id);\n    const data = await response.json();\n    console.log(data);\n    setSingleNft(data);\n  };\n  useEffect(() => {\n    getSingleNft();\n  }, []);\n  if (!singleNft) {\n    return <Loading />;\n  }\n\n  const { similarityScore, base64Img, category, coco_url, collection, date_captured, file_name,\n    file_path, flickr_url, generated_caption, height, id, license, \n    original_caption, similarity, width } = singleNft\n\n  return (\n    <>\n      {singleNft && (\n        <div>\n          <Link to={\"/\"} className=\"btn btn-back\">\n            back home\n          </Link>\n        <section className=\"section nftDetails-section\">\n          <h2></h2>\n          <div className=\"nftDetails\">\n            <img src={`data:image/jpeg;base64,${base64Img}`} />\n            <div className=\"nft-info\">\n              <p>\n                <span className=\"nftDetails-data\">Description :</span>\n                {generated_caption}\n              </p>\n              <p>\n                <span className=\"nftDetails-data\">Category :</span>\n                {category}\n              </p>\n              <p>\n                <span className=\"nftDetails-data\">Collection :</span>\n                {collection}\n              </p>\n              <p>\n                <span className=\"nftDetails-data\">Original Caption :</span>\n                {original_caption}\n              </p>\n              <p>\n                <span className=\"nftDetails-data\">Size :</span>\n                {height} x {width} Pixels\n              </p>\n              <p>\n                <span className=\"nftDetails-data\">License Type:</span>\n                {license}\n              </p>\n            </div>\n          </div>\n        </section>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SingleNft;\n"]},"metadata":{},"sourceType":"module"}