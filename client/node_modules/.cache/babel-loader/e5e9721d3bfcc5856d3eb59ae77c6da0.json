{"ast":null,"code":"var _jsxFileName = \"/Users/davidazzato/Desktop/Tesi/Capitolo 3/WebApp/Prova Flask+React/FlaskreactProject/client/src/pages/SingleNft.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Loading from \"../components/Loading\";\nimport ImageSlider from \"../components/ImageSlider\";\nimport { useParams, Link } from \"react-router-dom\";\nconst url = \"http://127.0.0.1:5000/nftDetails?id=\";\n\nconst SingleNft = () => {\n  const {\n    Id\n  } = useParams();\n  const [singleNft, setSingleNft] = useState(null);\n  const [similarNfts, setSimilarNfts] = useState([]);\n\n  const getSingleNft = async () => {\n    const response = await fetch(url + Id);\n    const data = await response.json();\n    setSingleNft(data[\"nft\"]);\n    setSimilarNfts(data[\"similars\"]);\n  };\n\n  useEffect(() => {\n    getSingleNft();\n  }, []);\n\n  if (!singleNft) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const originalList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  var startIndex = 0;\n  var endIndex = startIndex + 4;\n  var nftList = originalList.slice(startIndex, endIndex);\n\n  function imageSlider() {\n    let next = list => {\n      if (endIndex < list.length - 4) {\n        startIndex += 4;\n        endIndex += 4;\n      } else {\n        startIndex = endIndex;\n        endIndex = originalList.length;\n      }\n\n      nftList = originalList.slice(startIndex, endIndex);\n      console.log(nftList);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"similar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"similar-prev\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"\\u276E\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"similar-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, nftList.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"similar-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, item))), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"similar-next\",\n      onClick: () => {\n        next(originalList);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"\\u276F\"));\n  }\n\n  const {\n    similarityScore,\n    base64Img,\n    category,\n    coco_url,\n    collection,\n    date_captured,\n    file_name,\n    file_path,\n    flickr_url,\n    generated_caption,\n    height,\n    id,\n    license,\n    original_caption,\n    similarity,\n    width\n  } = singleNft;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, singleNft && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"back home\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section nftDetails-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nftDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/jpeg;base64,${base64Img}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nft-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Description :\"), generated_caption), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, \"Category :\"), category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, \"Collection :\"), collection), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"Original Caption :\"), original_caption), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Size :\"), height, \" x \", width, \" Pixels\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"nftDetails-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, \"License Type:\"), license)))), imageSlider()));\n};\n\nexport default SingleNft;","map":{"version":3,"sources":["/Users/davidazzato/Desktop/Tesi/Capitolo 3/WebApp/Prova Flask+React/FlaskreactProject/client/src/pages/SingleNft.js"],"names":["React","useState","useEffect","Loading","ImageSlider","useParams","Link","url","SingleNft","Id","singleNft","setSingleNft","similarNfts","setSimilarNfts","getSingleNft","response","fetch","data","json","originalList","startIndex","endIndex","nftList","slice","imageSlider","next","list","length","console","log","map","item","index","similarityScore","base64Img","category","coco_url","collection","date_captured","file_name","file_path","flickr_url","generated_caption","height","id","license","original_caption","similarity","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Loading from \"../components/Loading\";\nimport ImageSlider from \"../components/ImageSlider\"\nimport { useParams, Link } from \"react-router-dom\";\n\n\nconst url = \"http://127.0.0.1:5000/nftDetails?id=\";\n\nconst SingleNft = () => {\n  const { Id } = useParams();\n\n  const [singleNft, setSingleNft] = useState(null);\n  const [similarNfts, setSimilarNfts] = useState([]);\n\n  const getSingleNft = async () => {\n    const response = await fetch(url + Id);\n    const data = await response.json();\n    setSingleNft(data[\"nft\"]);\n    setSimilarNfts(data[\"similars\"])\n  };\n\n  useEffect(() => {\n    getSingleNft();\n  }, []);\n  if (!singleNft) {\n    return <Loading />;\n  }\n\n  const originalList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  var startIndex=0\n  var endIndex=startIndex+4\n  var nftList = originalList.slice(startIndex,endIndex)\n\n  function imageSlider() {\n    \n    let next = (list) => {\n      if(endIndex<list.length-4){\n        startIndex+=4\n        endIndex+=4\n      } else {\n        startIndex=endIndex\n        endIndex=originalList.length\n      }\n      nftList=originalList.slice(startIndex, endIndex)\n      console.log(nftList)\n    }\n\n    return (\n      <div className=\"similar-wrapper\">\n        <a className=\"similar-prev\" >&#10094;</a>\n        <div className=\"similar-image-container\">\n          {nftList.map((item, index) => (\n            <div key={index} className=\"similar-image\">{item}</div>\n          ))}\n        </div>\n        <a className=\"similar-next\" onClick={() => {next(originalList)}}>&#10095;</a>\n      </div>)\n  }\n\n  const { similarityScore, base64Img, category, coco_url, collection, date_captured, file_name,\n    file_path, flickr_url, generated_caption, height, id, license,\n    original_caption, similarity, width } = singleNft\n\n  return (\n    <>\n      {singleNft && (\n        <div>\n          <div className=\"tab-back\">\n            <Link to={\"/\"} className=\"btn btn-primary\">\n              back home\n            </Link>\n          </div  >\n          <section className=\"section nftDetails-section\">\n            <h2></h2>\n            <div className=\"nftDetails\">\n              <img src={`data:image/jpeg;base64,${base64Img}`} />\n              <div className=\"nft-info\">\n                <p>\n                  <span className=\"nftDetails-data\">Description :</span>\n                  {generated_caption}\n                </p>\n                <p>\n                  <span className=\"nftDetails-data\">Category :</span>\n                  {category}\n                </p>\n                <p>\n                  <span className=\"nftDetails-data\">Collection :</span>\n                  {collection}\n                </p>\n                <p>\n                  <span className=\"nftDetails-data\">Original Caption :</span>\n                  {original_caption}\n                </p>\n                <p>\n                  <span className=\"nftDetails-data\">Size :</span>\n                  {height} x {width} Pixels\n                </p>\n                <p>\n                  <span className=\"nftDetails-data\">License Type:</span>\n                  {license}\n                </p>\n              </div>\n            </div>\n          </section>\n\n          {imageSlider()}\n\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SingleNft;\n"]},"metadata":{},"sourceType":"module"}